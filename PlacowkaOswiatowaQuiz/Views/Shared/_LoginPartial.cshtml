@model LoginViewModel

@if (Context.Request.Cookies.ContainsKey("Cookies"))
{
    <div class="d-flex">
        <span>Witaj user!</span>
        <form style="padding-right:150px" id="logoutForm">
            <a href="#" type="button" class="btn btn-info" id="logoutButton">Wyloguj</a>
        </form>
    </div>
}
else
{
<div class="d-flex">
    <div class="dropdown" style="padding-right:150px">
        <button class="btn btn-info dropdown-toggle" data-bs-toggle="dropdown" type="button"
                data-bs-auto-close="outside" id="logMenuDropdown" data-bs-offset="10,20">
            Logowanie
            @*<span class="caret"></span>*@
        </button>
        @*AntiForgeryToken jest dodawany automatycznie*@

        <form class="dropdown-menu p-4" id="loginForm">
            <div class="form-group mb-3">
                <label asp-for="@Model.Email" class="control-label"></label>
                <input asp-for="@Model.Email" class="form-control" type="text" required />
                <span asp-validation-for="@Model.Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="@Model.Password" class="control-label"></label>
                <input asp-for="@Model.Password" class="form-control" type="password" required />
                <span asp-validation-for="@Model.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <a href="#" type="button" class="btn btn-primary" id="loginButton">
                    Zaloguj
                </a>
                <a asp-controller="User" asp-action="Register" type="button"
                   class="btn btn-outline-primary">
                    Zarejestruj
                </a>
                <a href="#" type="button" id="dataButton" class="btn btn-link">
                    Data
                </a>
            </div>
        </form>
    </div>
</div>
}

<script>

    $(document).ready(function () {
        setValidation();
    });

    $("#loginButton").click(function () {
        var isFormValid = $("#loginForm").valid();
        if (isFormValid == false) {
            return;
        }
        $.ajax({
            type: "POST",
            url: "/User/Login",
            data: $("#loginForm").serialize()
        })
        .done(function (result, status) {
            toastr.success(result, null,
                { timeOut: 5000, positionClass: "toast-bottom-right" });
        })
        .fail(function (result, status) {
            toastr.error(result.responseText, null,
                { timeOut: 7000, positionClass: "toast-bottom-right" });
        });
    });

    var setValidation = function () {
        console.log("Invoking setValidation of LoginForm");
        $("#loginForm").removeData("validator");
        $("#loginForm").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("#loginForm");
    }

    $("#logoutButton").click(function () {
        $.ajax({
            type: "POST",
            url: "/User/Logout",
            data: $("#logoutForm").serialize()
        })
        .done(function (result, status) {
            toastr.success(result, null,
                { timeOut: 5000, positionClass: "toast-bottom-right" });
        })
        .fail(function (result, status) {
            toastr.error(result.responseText, null,
                { timeOut: 7000, positionClass: "toast-bottom-right" });
        });
    });

    $("#dataButton").click(function () {
        $.ajax({
            type: "GET",
            url: "/User/Data"
        })
            .done(function (result, status) {
                toastr.success(result, null,
                    { timeOut: 5000, positionClass: "toast-bottom-right" });
            })
            .fail(function (result, status) {
                toastr.error(result.responseText, null,
                    { timeOut: 7000, positionClass: "toast-bottom-right" });
            });
    });

</script>